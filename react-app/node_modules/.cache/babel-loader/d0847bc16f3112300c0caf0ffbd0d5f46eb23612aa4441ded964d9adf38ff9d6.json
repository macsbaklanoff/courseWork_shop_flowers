{"ast":null,"code":"import { act } from \"react\";\nimport { contains } from \"./contains_flower\";\nlet initialState = {\n  product: {},\n  countProduct: 1,\n  arrayFlowerForBascet: new Map(),\n  arrayRelatedProductsForBascet: []\n};\nexport const reducer = (state = initialState, action) => {\n  if (action.type == 'setFlower') {\n    return {\n      ...state,\n      product: action.payload\n    };\n  }\n  if (action.type == 'getFlower') {\n    return {\n      ...state\n    };\n  }\n  if (action.type == 'addFlowerInBascet') {\n    return {\n      ...state,\n      product: action.payload,\n      ...state.arrayFlowerForBascet.push(action.payload)\n    };\n  }\n  if (action.type == 'addProductInBascet') {\n    return {\n      ...state,\n      product: action.payload,\n      ...state.arrayRelatedProductsForBascet.push(action.payload)\n    };\n  }\n  if (action.type == 'deleteFlowerInBascet') {\n    state.arrayFlowerForBascet = state.arrayFlowerForBascet.filter(x => x != action.payload);\n    return {\n      ...state,\n      ...state.arrayFlowerForBascet\n    };\n  }\n  if (action.type == 'deleteProductInBascet') {\n    state.arrayRelatedProductsForBascet = state.arrayRelatedProductsForBascet.filter(x => x != action.payload);\n    return {\n      ...state,\n      ...state.arrayRelatedProductsForBascet\n    };\n  }\n  if (action.type == 'addOneFlowerCount') {\n    return {\n      ...state,\n      countProduct: state.countProduct + 1\n    };\n  }\n  if (action.type == 'deleteOneFlowerCount') {\n    return {\n      ...state,\n      countProduct: state.countProduct - 1\n    };\n  }\n  return {\n    ...state\n  };\n};","map":{"version":3,"names":["act","contains","initialState","product","countProduct","arrayFlowerForBascet","Map","arrayRelatedProductsForBascet","reducer","state","action","type","payload","push","filter","x"],"sources":["D:/courseWork_shop_flowers/react-app/src/store/reducers/reducer_1.js"],"sourcesContent":["import { act } from \"react\";\r\nimport { contains } from \"./contains_flower\";\r\n\r\nlet initialState = {\r\n    product: {},\r\n    countProduct: 1,\r\n    arrayFlowerForBascet: new Map(),\r\n    arrayRelatedProductsForBascet:[],\r\n}\r\n\r\nexport const reducer = (state = initialState, action) => {   \r\n    if (action.type == 'setFlower') {\r\n        return {...state, product: action.payload}\r\n    }\r\n    if (action.type == 'getFlower') {\r\n        return {...state};\r\n    }\r\n    if (action.type == 'addFlowerInBascet') {\r\n        return {...state, product: action.payload, ...state.arrayFlowerForBascet.push(action.payload)}\r\n    }\r\n    if (action.type == 'addProductInBascet') {\r\n        return {...state, product: action.payload, ...state.arrayRelatedProductsForBascet.push(action.payload)}\r\n    }\r\n    if (action.type == 'deleteFlowerInBascet') {\r\n        state.arrayFlowerForBascet = state.arrayFlowerForBascet.filter(x => x != action.payload)\r\n        return {...state, ...state.arrayFlowerForBascet}\r\n    }\r\n    if (action.type == 'deleteProductInBascet') {\r\n        state.arrayRelatedProductsForBascet = state.arrayRelatedProductsForBascet.filter(x => x != action.payload)\r\n        return {...state, ...state.arrayRelatedProductsForBascet}\r\n    }\r\n    if (action.type == 'addOneFlowerCount') {\r\n        return {...state, countProduct: state.countProduct + 1}\r\n    }\r\n    if (action.type == 'deleteOneFlowerCount') {\r\n        return {...state, countProduct: state.countProduct - 1}\r\n    }\r\n    return {...state};\r\n    \r\n}"],"mappings":"AAAA,SAASA,GAAG,QAAQ,OAAO;AAC3B,SAASC,QAAQ,QAAQ,mBAAmB;AAE5C,IAAIC,YAAY,GAAG;EACfC,OAAO,EAAE,CAAC,CAAC;EACXC,YAAY,EAAE,CAAC;EACfC,oBAAoB,EAAE,IAAIC,GAAG,CAAC,CAAC;EAC/BC,6BAA6B,EAAC;AAClC,CAAC;AAED,OAAO,MAAMC,OAAO,GAAGA,CAACC,KAAK,GAAGP,YAAY,EAAEQ,MAAM,KAAK;EACrD,IAAIA,MAAM,CAACC,IAAI,IAAI,WAAW,EAAE;IAC5B,OAAO;MAAC,GAAGF,KAAK;MAAEN,OAAO,EAAEO,MAAM,CAACE;IAAO,CAAC;EAC9C;EACA,IAAIF,MAAM,CAACC,IAAI,IAAI,WAAW,EAAE;IAC5B,OAAO;MAAC,GAAGF;IAAK,CAAC;EACrB;EACA,IAAIC,MAAM,CAACC,IAAI,IAAI,mBAAmB,EAAE;IACpC,OAAO;MAAC,GAAGF,KAAK;MAAEN,OAAO,EAAEO,MAAM,CAACE,OAAO;MAAE,GAAGH,KAAK,CAACJ,oBAAoB,CAACQ,IAAI,CAACH,MAAM,CAACE,OAAO;IAAC,CAAC;EAClG;EACA,IAAIF,MAAM,CAACC,IAAI,IAAI,oBAAoB,EAAE;IACrC,OAAO;MAAC,GAAGF,KAAK;MAAEN,OAAO,EAAEO,MAAM,CAACE,OAAO;MAAE,GAAGH,KAAK,CAACF,6BAA6B,CAACM,IAAI,CAACH,MAAM,CAACE,OAAO;IAAC,CAAC;EAC3G;EACA,IAAIF,MAAM,CAACC,IAAI,IAAI,sBAAsB,EAAE;IACvCF,KAAK,CAACJ,oBAAoB,GAAGI,KAAK,CAACJ,oBAAoB,CAACS,MAAM,CAACC,CAAC,IAAIA,CAAC,IAAIL,MAAM,CAACE,OAAO,CAAC;IACxF,OAAO;MAAC,GAAGH,KAAK;MAAE,GAAGA,KAAK,CAACJ;IAAoB,CAAC;EACpD;EACA,IAAIK,MAAM,CAACC,IAAI,IAAI,uBAAuB,EAAE;IACxCF,KAAK,CAACF,6BAA6B,GAAGE,KAAK,CAACF,6BAA6B,CAACO,MAAM,CAACC,CAAC,IAAIA,CAAC,IAAIL,MAAM,CAACE,OAAO,CAAC;IAC1G,OAAO;MAAC,GAAGH,KAAK;MAAE,GAAGA,KAAK,CAACF;IAA6B,CAAC;EAC7D;EACA,IAAIG,MAAM,CAACC,IAAI,IAAI,mBAAmB,EAAE;IACpC,OAAO;MAAC,GAAGF,KAAK;MAAEL,YAAY,EAAEK,KAAK,CAACL,YAAY,GAAG;IAAC,CAAC;EAC3D;EACA,IAAIM,MAAM,CAACC,IAAI,IAAI,sBAAsB,EAAE;IACvC,OAAO;MAAC,GAAGF,KAAK;MAAEL,YAAY,EAAEK,KAAK,CAACL,YAAY,GAAG;IAAC,CAAC;EAC3D;EACA,OAAO;IAAC,GAAGK;EAAK,CAAC;AAErB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}